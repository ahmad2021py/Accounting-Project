<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AbUBAQG7AgICoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BAQG8AQEB2wAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMQEBAcsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAQEBsgAAAEcAAACVAgICmQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAANAAAARwAA
        AGQAAABWAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABJAAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAOwsN
        B3QKDgiADhMMbAAAAEUAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADMAAAB6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVGg5uGyQV0C47
        I+FRaj3vbo5S/2+QU/9sjVH/WXNC9zlKK+YgKhjdGB4SzBYcEK0UGg+JFBoPixceErwOEQrhAAAAEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACgICAqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsj
        Fc2YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf9vkFP/YX1I/422af+YxXH/irNn/3OVVv9ylFX/i7Rn/zE/
        JeUAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICnAAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHCUW0JjFcf9zllX/RVwy/4evZf+Hr2T/OUkq/zVEJ/9deEX/RVk0/5jFcf+RvGz/XnpF/4at
        Y/+YxXH/KTYf5AAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAQEBswAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeJxfSmMVx/yY0Gf9McSP/M0Qk/4myZv8cJBX/TmQ6/3GSVP+YxXH/mMVx/z9T
        Lf89Whz/JDIY/5jFcf8lMRzhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AQEBuAAA
        AGcAAAAkAAAAEQAAAAUAAAAAAAAAACAoGNKYxXH/PVEr/yEtFP9WcT7/h69l/x0mFv9FWjT/haxj/422
        af+YxXH/UWo6/y1AGf8oNhv/mMVx/yQuG90AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAAUAICAowCAgKjAAAAYgAAAAAAAAAAICkY1JjFcf+YxXH/mMVx/5jFcf+YxXH/g6ph/zRD
        J/8vPST/V3FB/5jFcf+YxXH/gqhh/5fDcP+YxXH/ISsZ2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKBjSmMVx/5bDcP99oV3/aIdO/2WD
        S/91l1f/lMBu/5jFcf+YxXH/mMVx/5jFcf+YxXH/mMVx/5jFcf8dJhbSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUbEM8lLxziGSATyRQY
        D4kDAwNaAAAAVRAWDH4YHxO+JC4b1kRYM+hsjVH/f6Ve/4GoYP9tjVH/Rlk07RUaD7cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQsQCW8WGw+VGB8SnRAVDG4AAAAqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////w////wD///gAH//wAB//8AAf//AAH//wABx/8AA
        f3/AAH+/wAB/38AAf9/wAH///AP/7/8P/6/////H8///7+n////////////v///+AAP7/AAD+/wAA/38
        AAP+/AAD/5wAA//8AAP//DgD////n///////////
</value>
  </data>
</root>