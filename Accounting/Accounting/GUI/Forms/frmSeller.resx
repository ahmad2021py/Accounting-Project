<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //9y3P//ue7//2fZ///Z9v//H8f//wfB//8Hwf//Bbj/aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN3Z
        zn7c2M//3NjP/9zYz//c2M//3NjP/9zYz//c2M//3NjP/9fFvP+1UT//tVE//9fGu//c2M//3NjP/xDC
        /f8Hwf//B8H//xvG//8Vxf//B8H//8zz//9F0f//B8H//wfB//8Esf/0AJ7/FQAAAAAAAAAAAAAAAAAA
        AAAAAAAA3dnQPNzYz//c2M//3NjP/9zYz//c2M//3NjP/9zYz//c2M//29TL/7VSQP+1UkD/29TL/9zY
        z//Z2ND/CMH//wfB//8Hwf//VtX//6bp//+M4///0vT//xnF//8Hwf//B8H//wSy//8Al/+RAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8B3NjP09zYz//c2M//3NjP/9zYz//c2M//3NjP/9zYz//c2M//uFxL/7hd
        TP/c2M//3NjP/9zYz/8dxPr/B8H//wfB//9l2f//qOr//0zS//8fx///B8H//wfB//8Hwf//BK3//wCY
        /+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADe2dE93NjP+9zYz//c2M//3NjP/9zYz//c2M//3NjP/9zY
        z/+8a1v/vWtc/9zYz//c2M//3NjP/2XL6v8Hwf//B8H//0zT///H8f//e97//3ve//8Xxf//B8H//wfA
        //8BoP//AJj/9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd2M9v3NjP/tzYz//c2M//3NjP/9zY
        z//c2M//3NjP/79zZP+/dGX/3NjP/9zYz//c2M//zdbT/yHE+f8Hwf//H8f//23b//9t2///bdv//xXF
        //8Hwf//BLD//wCY//8AmP/TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd189a3NjP89zY
        z//c2M//3NjP/9zYz//Yyb//t1lH/7dZR//YysD/3NjP/9zYz//c2M//vdXW/yjF9/0Hwf//B8H//wfB
        //8Hwf//B8H//wSw//8Amf//AJj//wCX/3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        A///wAP//+AH///gD///+D//////////////////
</value>
  </data>
</root>