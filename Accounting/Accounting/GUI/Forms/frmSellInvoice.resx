<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/IsQe/yXFdv8kw3f/JMN3/yTDd/8kw3f/JMN3/yTDd/8k
        w3f/JMN3/yPFWAAAAAAAAAAAAAAAAAAAAAAAAAAA/ym4ff8puH3/KbZ3/ym2d/8ptnf/KbZ3/ym2d/8p
        tnf/KbZ3/ym2d/8qt74AAAAAAAAAAAAAAAAAAAAAAAAAAP8wqYD/K6oGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/MKmGAAAAAAAAAAAAAAAAAAAAAAAAAAD/NJ2AAAAAAP80nYD/NJ2A/zSbQP82
        nS//M5x3/zOcd/8znHf/M5x3/zSdu/8znHf/M5x3/zKbLgAAAAAAAAAA/zqPgAAAAAAAAAAAAAAAAAAA
        AAD/Oo+A/zuPZP85kEcAAAAAAAAAAAAAAAD/O49J/zmPYv86j4AAAAAAAAAAAP9Ag4AAAAAA/z+Dsf9A
        g4j/QIOA/0CDgP9Cg0YAAAAA/7LVK/+v1Lb/sNUqAAAAAP9BgUf/QIOAAAAAAAAAAAD/RnaAAAAAAP9G
        d7v/RXZ3/0Z2gP9GdoAAAAAAAAAAAP+7nmn/vJ3//7ycZwAAAAAAAAAA/0Z2gAAAAAAAAAAA/0xqgAAA
        AAD/TGqAAAAAAP9MaoD/TGqA/0tqmP9NZhT//4AC/8NyL///gAL/SW0V/0tqmP9MaoAAAAAAAAAAAP9S
        XIAAAAAA/1FcxP9RXIj/UlyA/1JcgP9RXI3/UVyu/1Fcd/9RXHf/UVx3/1Jcr/9QXYz/UlyAAAAAAAAA
        AAD/VlCAAAAAAP9WTqb/Vk93/1ZQgP9XT2r/Vk93/1ZPd/9WT3f/Vk93/1ZPd/9WT3f/Vk93/1dPagAA
        AAAAAAAA/1xCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9cQoAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP9iNoAAAAAA/2I2gP9iNoD/YjaA/2I2gP9iNoD/YjaA/2I2gP9kNED/YjaAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/Zil9/2AgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2gohQAA
        AAAAAAAAAAAAAAAAAAAAAAAA/28aHv9tG4P/bRqI/20aiP9tGoj/bRqI/20aiP9tGoj/bRqI/20aiP9s
        HFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/+8AAL/vAACn7wAAvf0AAKHdAACp3QAAqPkAAKBx
        AACr/wAAv+8AAKAvAAD/7wAAwB8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yXAiv8lwfv/JcH//yXB//8l
        wf//JcH//yXB//8lwf//JcH//yXB//8lwf//JcH//yXB//8lwf//JcH//yXB//8lwf//JcH//yXB//8l
        wfv/JsGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/KLr5/yu4EgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/yi8E/8ouvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8r
        tP//K7T7/yu0//8rtP//K7T//yu0//8rtP//K7T//yu0//8rtP//K7T//yu0//8rtP//K7T//yu0//8r
        tP//K7T//yu0//8rtP//K7T7/yu0/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/y2t//8rqhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8orhP/La3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/MKf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8wp/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8zoP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/zOg/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/zaa/wAAAAAAAAAA/zaa//82mv//Npr//zaa//82
        mv8AAAAAAAAAAP82msP/Npr//zaa//82mv//Npr//zaa//82mv//Npr//zaa//82mv//Npr//zaa//82
        mv//Npr//zaa//82m8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/OZP/AAAAAAAAAAAAAAAAAAAAAAAA
        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
        Bv/v//7/7//+/+///v/gAAD/////////////////
</value>
  </data>
</root>