<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yS2B/8lwW//I8E6/yPCO/8lwW//JLYO/yXBb/8k
        w3f/JMN3/yPBc/8kwioAAAAAAAAAAAAAAAAAAAAAAAAAAP8qtD3/LLNG/yuzg/8rs4P/LLNG/yu1a/9B
        vk//quYz/6rmM/+A1TD/LLNX/yu0hP8uuQsAAAAAAAAAAAAAAAD/MqM9/zKjSP8ypYX/MqWF/zKjSP8y
        pGv/TK1U/7DWRP+w1kT/r9Vc/67Wjv+Cxzf/MKSPAAAAAAAAAAAAAAAA/0mSB/83lXj/OZU6/ziTO/84
        lnf/SZIO/zeVeP84lIj/OJSI/ziVlf87lkn/tMaO/zmVWf83ljMAAAAAAAAAAAAAAAAAAAAAAAAAAP9J
        kgf/PoVeAAAAAAAAAAAAAAAAAAAAAAAAAAD/P4eK/7W1Wv+RpTP/QIZwAAAAAAAAAAAAAAAAAAAAAP9E
        dx7/RXaM/0R2lQAAAAAAAAAAAAAAAAAAAAAAAAAA/0V3hf+6pln/mJg0/0Z1cQAAAAAAAAAAAAAAAP9L
        ZUT/TGZ//4CADP9MaID/S2d3/0tnd/9LZ3f/S2d3/0xnhv9Qakb/vZiP/05pVf9KZjcAAAAAAAAAAP9T
        Wkr/Ulhj/8KGgf/Bh8b/w4cz/8OHM//DhzP/w4cz/8OHM//ChlT/wIeG/555N/9SWJkAAAAAAAAAAAAA
        AAD/V0lJ/1pJZv/Ed37/xHjK/8N4RP/DeET/w3hE/8N4RP/DeET/nmYy/1lKVv9ZSZ3/YFAQAAAAAAAA
        AAAAAAAAAAAAAP9eOET/XzmG/5JbDv9gOoD/YDqI/2A6iP9gOoj/YDqI/2A7df9fODsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/2YrHv9nK5X/ZiqdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/bSQH/20bXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAOf3AADn6wAA/xcAAP/vAADz7wAA+9cAAOfr
        AAD39wAA6D8AAPP/AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2YzBf9kLpH/ZC7e/2MvMQAA
        AAD/ZC7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9p
        JUv/aCfp/2gobP9oJ/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP9tHSP/ax/G/2sgugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////8YwB//Wt/n/kIf8/5CEB3/Wt
        /k/xjANv///9t////rf/z/63/6/+t/5v/rf87/23+eADb/d//m/sP/Hf7AAPv/d//n/54AH//O////5v
        ////r////8//////////////////////////////
</value>
  </data>
</root>